// ****************************************************************************
// * NASA Glenn Research Center
// * 21000 Brookpark Rd
// * Cleveland, OH 44135
// * Jeffrey Csank, David Sadey, Tom Lavelle
// * April 26, 2018
// ****************************************************************************

//#include <InterpIncludes.ncp>
class Cable extends Element {
	
	//------------------------------------------------------------
	//     ******* DOCUMENTATION *******
	//------------------------------------------------------------
	
	title = "";
	
	description = isA() + " Determines power for the cable";
	
	usageNotes = isA() + "- NOTE TO USERS: This file....";
	
	background = "";
	
	//------------------------------------------------------------
	//     ******* SETUP VARIABLES ********
	//------------------------------------------------------------
	
	real R;
    
	real L;
    
    real length;
	
	ComplexNumber dV;
	ComplexNumber Z;
	ComplexNumber I;
	
	real SpecificAmperage {
	value = 170.; IOstatus="input"; //units=;
	description = "Amps to Weight/length ratio for the cable";
	}
	
	real Mass {
		value=0; IOstatus="output"; //units="kg";
		description = "Mass output of the cable";
	}
	
	
	// Will add losses in future releases.
	real Loss_r {
		value = 0; IOstatus="output"; units="W";
		description = "Cable Loss";
	}
	
	real Loss_j {
		value = 0; IOstatus="output"; units="W";
		description = "Cable Loss";
	}
	
	//------------------------------------------------------------
	// ****** SETUP PORTS, FLOW STATIONS, SOCKETS, TABLES ********
	//------------------------------------------------------------	
	ElectricOutputPort EP_O {
		description = "Electric port";
	}
	string EPortRef;
	
	ElectricInputPort EP_I {
		description = "Electric Port";
	}
	
	Option switchDes {
		allowedValues = { "DESIGN", "OFFDESIGN" } ;
		description = "Determines if the element is in design or off-design mode";
		rewritableValues = FALSE;
		trigger=FALSE;
	}
	
	void calculate() {
		
		//-------------------------------------------------------
		// calculate current from voltage drop
		//-------------------------------------------------------
		
		dV.copy( "EP_I.V" );
		dV.minus( "EP_O.V" );	
		Z.setrj( R,  L*(EP_I.frequency/60.) );
		I.copy( "dV" );
	    I.div( "Z" );

	    //----------------------------------------------------------
	    // set the conditions in the port
	    //-----------------------------------------------------------
		EP_O.setIV( I.r, I.j, EP_O.V.r, EP_O.V.j ); 
		EP_I.setIV( I.r, I.j, EP_I.V.r, EP_I.V.j ); 		
		EP_O.frequency=EP_I.frequency;
		
		//Loss = 3 * EP_I.I.mag * (EP_I.V.mag - Vload) / 1000.;
		if (switchDes=="DESIGN"){
			/***************************
			On-Design
			in on design, calculate the mass of the cable
			***************************/
			Mass=EP_I.I.mag/SpecificAmperage*length*3;
		}		
	}
}
